##########################
d-manager: Dietary manager
##########################

食事や食品情報を管理をするための CLI ツール群。

日々の食事内容を管理するために使えます。

***************
簡単な使い方
***************

食事内容の詳細を JSON で得る
=============================================

以下のように JSON 形式のテキストに食事情報を記述して、コマンドの標準入力に渡すと、
自身の食品データベース（後述）から食品情報を取得して、
摂取した栄養素や食品情報を含めた JSON 形式のテキストを出力します。

.. code-block:: shell

    $ cat meal.json
    [["product", 1, 2.0], ["stofc2015", 13023, 1.2]]
    $ cat meal.json | d-manager meal
    [{
            "製造者": "株式会社 明治",
            "商品名": "明治ブルガリアヨーグルトLB81プレーン",
            "量": "200.0 g",
            "熱量": "124.0 kcal",
            "たんぱく質": "6.8 g",
            "脂質": "6.0 g",
            "炭水化物": "10.6 g",
            "食塩相当量": "0.26 g"
        },
        {
            "製造者": "日本ケロッグ合同会社",
            "商品名": "フルーツグラノラ ハーフ",
            "量": "40.0 g",
            "熱量": "154.0 kcal",
            "たんぱく質": "2.5 g",
            "脂質": "1.2 g",
            "炭水化物": "34.1 g",
            "食塩相当量": "0.3 g"
        }
    ]

.. todo: 現在は Web 上の整形ツールで整形した JSON を例にしているので、実際の出力に置き換える。

ここで、入力となる食事情報は以下のような配列を要素とする配列です。

.. code-block:: json

    ["<食品データの格納先>", <食品 ID>, <食品の単位量に対する摂取倍率>]

食品データベースは、以下のように食品データのファイルを格納したディレクトリで構成されます。

    .
    ├ product
    │ ├ 00001.json
    │ ├ 00002.json
    │ └ ...
    └ stofc2015
    　 ├ 00001.json
    　 ├ 00002.json
    　 └ ...

環境変数 `D_MANAGER_FOODS` で指定したディレクトリが食品データベースのルートディレクトリになります。

食品データは JSON 形式で書かれたテキストファイルです。
食品データのファイル名が食品の ID となります。
各食品データの記述方法は後述します。

先ほどの `d-manager meal` コマンド例についてもう少し説明します。
コマンドの標準入力に渡された食事記録の JSON は以下のようなものでした。

.. code-block:: json

    [["product", 1, 2.0], ["stofc2015", 13023, 1.2]]

この JSON が渡された `d-manager meal` は、まず食品データベースのルートディレクトリ配下の "product" ディレクトリ内にあるファイルを探します。
ここでは、"product" の食品 ID 1 が指定されているので、product/00001.json を読み込みます。
ここでは、ファイルの整理のためファイル名を 00001.json としていますが、 1.json でも 001.json などでも構いません。
ファイル名の拡張子より前の部分を整数値とした時に、同じく整数値とした指定された ID と一致するファイルを読み込みます。

さらに、そのファイル内に記述されている JSON 形式の食品データの栄養素を 2.5 倍したものを摂取したものとして、その結果に含めます。

続く、入力の `["stofc2015", 13023, 1.2]` も同様に食品データベースのルートディレクトリ配下の "stofc2015" 内に
あるファイル 13023.json を読み込み、その栄養素を 1.2 倍したものを結果に含めます。

結果は以下になります。

.. code-block:: json

     TODO

この、結果をファイルに保存するなどして、この後に示す集計コマンドによって摂取した栄養素の総計を取得出来ます。

食事記録の栄養素の集計する
=============================================

先ほどの方法で、１日分の食事をいくつかの JSON 形式のテキストファイルとして保存してあるとします。

.. code-block:: shell
    $ ls
    0730.json  1250.json  1915.json  2145.json

これらのファイル名を `d-manager summary` の引数に渡すと、各ファイルの栄養素を集計して JSON 形式のデータとして返します。

.. code-block:: shell

    $ d-manager summary 0730.json 1250.json 1915.json 2145.json
    {
	  "熱量": "1940.0 kcal",
  	  "たんぱく質": "126.8 g",
	  "脂質": "60.0 g",
	  "炭水化物": "210.6 g",
	  "食塩相当量": "4.26 g"
    }

これによって、これらの食事の総計の栄養素がわかります。

オプションで、 `-u` をつけると、単位を JSON オブジェクトの名前に含めて値を数値に出来ます。

.. code-block:: shell

    $ d-manager summary -u 0730.json  1250.json  1915.json  2145.json
    {
	  "熱量 [kcal]": 1940.0,
  	  "たんぱく質 [g]": 126.8,
	  "脂質 [g]": 60.0,
	  "炭水化物 [g]": 210.6,
	  "食塩相当量 [g]": 4.26
    }
