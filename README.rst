##########################
d-manager: Dietary manager
##########################

食事や食品情報を管理をするための CLI ツール群。

日々の食事内容を管理するために使えます。

***************
使用例
***************

食事内容を JSON で得る
=============================================

用意した食品データベースから食品の情報を JSON 形式のテキストで取得出来ます。

以下のように食品の分類名、食品 ID、摂取割合を JSON でコマンド `d_manager meal` に標準入力で渡します。

.. code-block:: shell

    $ cat snack.json
    [["product", 1, 2.0], ["stofc2015", 13023, 1.2]]
    $ cat snack.json | d-manager meal
    [{
            "製造者": "株式会社 明治",
            "商品名": "明治ブルガリアヨーグルトLB81プレーン",
            "量": "200.0 g",
            "熱量": "124.0 kcal",
            "たんぱく質": "6.8 g",
            "脂質": "6.0 g",
            "炭水化物": "10.6 g",
            "食塩相当量": "0.26 g"
        },
        {
            "製造者": "日本ケロッグ合同会社",
            "商品名": "フルーツグラノラ ハーフ",
            "量": "40.0 g",
            "熱量": "154.0 kcal",
            "たんぱく質": "2.5 g",
            "脂質": "1.2 g",
            "炭水化物": "34.1 g",
            "食塩相当量": "0.3 g"
        }
    ]

.. todo: 現在は Web 上の整形ツールで整形した JSON を例にしているので、実際の出力に置き換える。

ここで得た結果は、この後に示す集計コマンドの入力となります。

食事の栄養成分を集計する
=============================================

食事の記録を集計して、摂取した栄養素の総計を取得出来ます。

コマンド `d-manager meal` で得た食事の記録をいくつかのファイルに保存してあるとします。

.. code-block:: shell

    $ ls
    0730.json  1250.json  1915.json  2145.json

これらのファイルを `d-manager summary` の引数に指定すると、
各記録を集計してそれぞれの栄養成分の合計値を JSON で返します。

.. code-block:: shell

    $ d-manager summary 0730.json 1250.json 1915.json 2145.json
    {
	  "熱量": "1940.0 kcal",
  	  "たんぱく質": "126.8 g",
	  "脂質": "60.0 g",
	  "炭水化物": "210.6 g",
	  "食塩相当量": "4.26 g"
    }

これによって、食事で摂取した栄養成分の総計がわかります。

ファイル名が引数で指定されていなかった場合は、標準入力から食事情報を読み取ります。
なので、以下のように使えば、１回の食事で摂取した栄養成分を集計出来ます。

.. code-block:: shell

    TODO

***************
詳細
***************

食品データベースの作成方法
=============================================

食品データベースは、以下のようなツリー構造のディレクトリです。

    | .
    | ├ product
    | │ ├ 00001.json
    | │ ├ 00002.json
    | │ └ ...
    | └ stofc2015
    | 　 ├ 00001.json
    | 　 ├ 00002.json
    | 　 └ ...

各食品のデータは JSON 形式のテキストファイルになります。
ファイル名の拡張子を除いた部分が食品の ID となります。
１つの食品毎に１つの JSON 形式のテキストファイルにする必要があります。

食品データは、食品データベースのルートディレクトリ配下のディレクトリで分類可能です。
この例では "product" と "stofc2015" の二つに食品が分類されています。

この構成のディレクトリをコマンドの実行ユーザがアクセス可能な場所に作成します。
食品データベースのルートディレクトリは環境変数 `D_MANAGER_FOODS` で指定して、コマンドに渡します。

食品データは以下のような構造を持つ JSON 形式のテキストファイルです。

.. code-block:: json

    {
      "name": "えだまめ　ゆで",
      "amount": "100g",
      "nutrients": {
        "energy": "134.0 kcal",
        "protein": "11.5 g",
        "lipid": "6.1 g",
        "carbohydrate": "8.9 g",
        "salt": "0.0 g"
      }
    }

また、コマンド `d-manager convert_stofc2015` を使うことで、日本食品標準成分表2015年版（七訂）の食品データを作成すること可能です。
詳しい作成方法は当ドキュメントの付録をご参考下さい。

コマンド `d-manager meal` の入力値について
=============================================

ここで、コマンド `d-manager meal` の入力値の形式について説明します。

入力値は JSON 形式のテキストで、以下の配列を要素を持つ配列です。

.. code-block:: json

    [分類, 食品 ID, 食品の基準量に対する割合]

実際は以下のようなテキストになります。

.. code-block:: json

    TODO

以下では、この配列のことを単に「入力情報」と読んでいます。

環境変数 `D_MANAGER_FOODS` で指定したディレクトリが食品データベースのルートディレクトリになります。
このコマンドを実行前に設定する必要があります。

入力情報の `"<分類>"` で、食品データベース内のどこの分類ディレクトリ内の食品データかを指定します。

入力情報では `<食品 ID>` で、分類ディレクトリ内の食品データを指示します。

.. TODO: 例と食品データの結びつきを例示する

入力情報の `<食品の基準量に対する割合>` とは、各食品データに記録されている食品の量を 1 として、それに対する割合です。
この値を 2.0 とすると、該当食品データの各種成分が 2.0 倍されたものが出力結果の量に反映されます。

..  先ほどの `d-manager meal` コマンド例についてもう少し説明します。
    コマンドの標準入力に渡された食事記録の JSON は以下のようなものでした。

   .. code-block:: json

        [["product", 1, 2.0], ["stofc2015", 13023, 1.2]]

    この JSON が渡された `d-manager meal` は、まず食品データベースのルートディレクトリ配下の "product" ディレクトリ内にあるファイルを探します。
    ここでは、"product" の食品 ID 1 が指定されているので、product/00001.json を読み込みます。
    ここでは、ファイルの整理のためファイル名を 00001.json としていますが、 1.json でも 001.json などでも構いません。
    ファイル名の拡張子より前の部分を整数値とした時に、同じく整数値とした指定された ID と一致するファイルを読み込みます。

    さらに、そのファイル内に記述されている JSON 形式の食品データの栄養素を 2.5 倍したものを摂取したものとして、その結果に含めます。

    続く、入力の `["stofc2015", 13023, 1.2]` も同様に食品データベースのルートディレクトリ配下の "stofc2015" 内に
    あるファイル 13023.json を読み込み、その栄養素を 1.2 倍したものを結果に含めます。

    結果は以下になります。

    .. code-block:: json

         TODO

***************
付録
***************

日本食品標準成分表2015年版（七訂）の Excel ファイルから食品データを作成する
====================================================================

日本食品標準成分表2015年版（七訂）の Excel ファイルに含まれる各種食品情報を `d-manager meal` コマンドで利用可能な食品データに変換出来ます。

`第2章　日本食品標準成分表　Exceｌ（日本語版）：文部科学省 <http://www.mext.go.jp/a_menu/syokuhinseibun/1365420.htm>`_

上記からダウンロードできる「一括ダウンロード（Excel：日本語）  （Excel:917KB）」には全ての食品群の食品が記載されているので、
このファイル（1365334_1r10.xlsx）を利用します。

変換には `d-manager convert_stofc2015` にダウンロードしたエクセルファイルと、変換した食品データの出力先のディレクトリを指定します。

.. code-block:: shell

    $ ls
    1365334_1r10.xlsx  stofc2015
    $ d-manager convert_stofc2015 --xlsx 1365334_1r10.xlsx --output_dir stofc2015
    $ ls stofc2015
    01001.json  01122.json  03012.json  05008.json  06081.json  ...

生成される食品データのテキストファイルの総数で約 2,000 程度になります。
出力先のディレクトリを適宜、食品データベース内に配置することでこれらの食品データを `d-manager meal` コマンドで利用出来ます。
